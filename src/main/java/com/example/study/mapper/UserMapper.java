package com.example.study.mapper;

import com.example.study.object.User;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Mon May 06 14:20:17 CST 2019
     */
    @Delete({
        "delete from user",
        "where open_id = #{openId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String openId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Mon May 06 14:20:17 CST 2019
     */
    @Insert({
        "insert into user (open_id, first_login, ",
        "last_login, name, ",
        "phone, task_id)",
        "values (#{openId,jdbcType=VARCHAR}, #{firstLogin,jdbcType=TIMESTAMP}, ",
        "#{lastLogin,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Mon May 06 14:20:17 CST 2019
     */
    @Select({
        "select",
        "open_id, first_login, last_login, name, phone, task_id",
        "from user",
        "where open_id = #{openId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="open_id", property="openId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_login", property="firstLogin", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_login", property="lastLogin", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="task_id", property="taskId", jdbcType=JdbcType.VARCHAR)
    })
    User selectByPrimaryKey(String openId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Mon May 06 14:20:17 CST 2019
     */
    @Select({
        "select",
        "open_id, first_login, last_login, name, phone, task_id",
        "from user"
    })
    @Results({
        @Result(column="open_id", property="openId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_login", property="firstLogin", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_login", property="lastLogin", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="task_id", property="taskId", jdbcType=JdbcType.VARCHAR)
    })
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated Mon May 06 14:20:17 CST 2019
     */
    @Update({
        "update user",
        "set first_login = #{firstLogin,jdbcType=TIMESTAMP},",
          "last_login = #{lastLogin,jdbcType=TIMESTAMP},",
          "name = #{name,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "task_id = #{taskId,jdbcType=VARCHAR}",
        "where open_id = #{openId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(User record);

    @Select({
            "select",
            "open_id, first_login, last_login, name, phone, task_id",
            "from user",
            "where task_id = #{taskId,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="open_id", property="openId", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="first_login", property="firstLogin", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="last_login", property="lastLogin", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_id", property="taskId", jdbcType=JdbcType.VARCHAR)
    })
    User selectByTaskId(String taskId);
}